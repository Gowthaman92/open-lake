apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "openlake.serviceName" (dict "component" "hive-metastore" "context" .) }}-config
  labels:
    {{- include "openlake.labels" (dict "component" "hive-metastore" "context" $ "Release" .Release) | nindent 4 }}
data:
  # Environment variables
  {{- if eq .Values.storage.type "azure" }}
  AZURE_STORAGE_ACCOUNT: {{ .Values.storage.azure.storageAccount | quote }}
  AZURE_CONTAINER_NAME: {{ .Values.storage.azure.containerName | quote }}
  {{- else if eq .Values.storage.type "aws" }}
  AWS_BUCKET_NAME: {{ .Values.storage.aws.bucketName | quote }}
  AWS_REGION: {{ .Values.storage.aws.region | quote }}
  {{- else if eq .Values.storage.type "gcp" }}
  GCP_BUCKET_NAME: {{ .Values.storage.gcp.bucketName | quote }}
  GCP_PROJECT_ID: {{ .Values.storage.gcp.projectId | quote }}
  {{- end }}
  WAREHOUSE_DIR: {{ .Values.hive.warehouseDir | quote }}
  
  # Hive site configuration
  hive-site.xml: |-
    <?xml version="1.0" encoding="UTF-8" standalone="no"?>
    <?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
    <configuration>
      <!-- PostgreSQL Configuration -->
      <property>
        <name>javax.jdo.option.ConnectionURL</name>
        <value>jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}{{ if .Values.database.ssl.enabled }}?ssl=true&amp;sslmode=require&amp;sslfactory=org.postgresql.ssl.NonValidatingFactory{{ end }}</value>
      </property>
      <property>
        <name>javax.jdo.option.ConnectionDriverName</name>
        <value>org.postgresql.Driver</value>
      </property>
      <property>
        <name>javax.jdo.option.ConnectionUserName</name>
        <value>${DB_USERNAME}</value>
      </property>
      <property>
        <name>javax.jdo.option.ConnectionPassword</name>
        <value>${DB_PASSWORD}</value>
      </property>
      <property>
        <name>javax.jdo.option.ConnectionPoolingType</name>
        <value>BONECP</value>
      </property>

      <!-- General Metastore Configuration -->
      <property>
        <name>metastore.task.threads.always</name>
        <value>org.apache.hadoop.hive.metastore.events.EventCleanerTask</value>
      </property>
      <property>
        <name>metastore.expression.proxy</name>
        <value>org.apache.hadoop.hive.metastore.DefaultPartitionExpressionProxy</value>
      </property>
      <property>
        <name>hive.metastore.event.db.notification.api.auth</name>
        <value>false</value>
      </property>

      {{- if eq .Values.storage.type "azure" }}
      <!-- Azure Blob Storage Configuration -->
      <property>
        <name>fs.azure.account.key.${AZURE_STORAGE_ACCOUNT}.dfs.core.windows.net</name>
        <value>${AZURE_STORAGE_KEY}</value>
      </property>
      <property>
        <name>fs.azure.account.auth.type</name>
        <value>SharedKey</value>
      </property>
      <property>
        <name>fs.abfss.impl</name>
        <value>org.apache.hadoop.fs.azurebfs.SecureAzureBlobFileSystem</value>
      </property>
      <property>
        <name>fs.defaultFS</name>
        <value>abfss://${AZURE_CONTAINER_NAME}@${AZURE_STORAGE_ACCOUNT}.dfs.core.windows.net/</value>
      </property>
      <property>
        <name>hive.metastore.warehouse.dir</name>
        <value>abfss://${AZURE_CONTAINER_NAME}@${AZURE_STORAGE_ACCOUNT}.dfs.core.windows.net/${WAREHOUSE_DIR}</value>
      </property>
      <property>
        <name>fs.azure.read.request.size</name>
        <value>4194304</value>
      </property>
      {{- else if eq .Values.storage.type "aws" }}
      <!-- AWS S3 Storage Configuration -->
      <property>
        <name>fs.s3a.access.key</name>
        <value>${AWS_ACCESS_KEY}</value>
      </property>
      <property>
        <name>fs.s3a.secret.key</name>
        <value>${AWS_SECRET_KEY}</value>
      </property>
      <property>
        <name>fs.s3a.endpoint</name>
        <value>s3.${AWS_REGION}.amazonaws.com</value>
      </property>
      <property>
        <name>hive.metastore.warehouse.dir</name>
        <value>s3a://${AWS_BUCKET_NAME}/${WAREHOUSE_DIR}</value>
      </property>
      {{- else if eq .Values.storage.type "gcp" }}
      <!-- Google Cloud Storage Configuration -->
      <property>
        <name>fs.gs.project.id</name>
        <value>${GCP_PROJECT_ID}</value>
      </property>
      <property>
        <name>google.cloud.auth.service.account.json.keyfile</name>
        <value>${GCP_KEY_FILE}</value>
      </property>
      <property>
        <name>hive.metastore.warehouse.dir</name>
        <value>gs://${GCP_BUCKET_NAME}/${WAREHOUSE_DIR}</value>
      </property>
      {{- else }}
      <!-- Local or other storage -->
      <property>
        <name>hive.metastore.warehouse.dir</name>
        <value>${WAREHOUSE_DIR}</value>
      </property>
      {{- end }}

      <!-- Performance tuning -->
      <property>
        <name>hive.metastore.batch.retrieve.max</name>
        <value>300</value>
      </property>
      <property>
        <name>hive.metastore.client.socket.timeout</name>
        <value>600s</value>
      </property>
    </configuration> 